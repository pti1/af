- name: install gangia master packages
  apt: pkg={{ item }} state=latest force=yes
  with_items:
   - hadoop-yarn-resourcemanager
   - hadoop-hdfs-namenode
- name: copy configuration
  tags: deploy
  copy: src=mapred-site.xml dest=/etc/hadoop/conf.empty/ owner=root group=hadoop mode=u+rwx 
  register: mastername_changed
  notify:
    - restart namenode
- name: Pushes configuration
  template: src={{ item.src }} dest=/etc/hadoop/conf.empty/{{ item.dest }} mode=u+rwx owner=root group=hadoop
  with_items:
    - { src: 'core-site.xml.j2', dest: 'core-site.xml' } 
    - { src: 'yarn-site.xml.j2', dest: 'yarn-site.xml' }
    - { src: 'hdfs-site.xml.j2', dest: 'hdfs-site.xml' }
  notify:
    - restart namenode
- name: format namenode
  shell: su -c "hdfs namenode -format -clusterid mycluster -force -nonInteractive" hdfs 
  when: mastername_changed.changed
- name: create user
  user: name=pascal home=/home/pascal
- name: start all services
  service: name={{ item }} state=started
  with_items:
    - hadoop-hdfs-namenode
    - hadoop-hdfs-datanode
    - hadoop-yarn-resourcemanager
    - hadoop-yarn-nodemanager
- name: wait for hdfs to be ready
  shell: curl {{ ansible_fqdn }}:50070
  register: hdfs_ready
  until:  hdfs_ready.stdout.find("Hadoop Administration") != -1
  retries: 5
  delay: 2
  when: mastername_changed.changed
- name: create hdfs config
  shell: "{{item}}"
  su: yes
  su_user: hdfs
  when: mastername_changed.changed
  with_items:
    #- hadoop fs -rm -r /tmp 
    - hadoop fs -mkdir -p /tmp/hadoop-yarn/staging 
    - hadoop fs -chmod -R 777 /tmp/hadoop-yarn/staging
    - hadoop fs -mkdir -p /tmp/hadoop-yarn/staging/history/done_intermediate
    - hadoop fs -chown -R mapred:mapred /tmp/hadoop-yarn/staging
    - hadoop fs -mkdir -p /var/log/hadoop-yarn
    - hadoop fs -chown yarn:mapred /var/log/hadoop-yarn
    - hadoop fs -chmod -R 1777 /tmp
    - hadoop fs -mkdir -p /user/root
    - hadoop fs -chown root:root /user/root
    - hadoop fs -mkdir -p /user/pascal
    - hadoop fs -chown pascal:pascal /user/pascal
- name: Get the host part of the IP 
  shell: host {{ ansible_fqdn }} | awk '{print $4}' 
  register: host_ip 
- name: show information
  debug: msg={{ item }}
  with_items:
   - "namenode uri: {{ host_ip }}:50070"
   - "yarn uri: {{ host_ip }}:8088"

#- meta: flush_handlers
