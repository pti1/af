- name: install hadoop master packages
  apt: pkg={{ item }} state=latest force=yes
  with_items:
   - hadoop-yarn-resourcemanager
   - hadoop-hdfs-namenode
- name: copy configuration
  tags: deploy
  copy: src=mapred-site.xml dest=/etc/hadoop/conf.empty/ owner=root group=hadoop mode=u+rwx 
  register: mastername_changed
  notify:
    - restart namenode
- name: Pushes configuration
  template: src={{ item.src }} dest=/etc/hadoop/conf.empty/{{ item.dest }} mode=u+rwx owner=root group=hadoop
  with_items:
    - { src: 'core-site.xml.j2', dest: 'core-site.xml' } 
    - { src: 'yarn-site.xml.j2', dest: 'yarn-site.xml' }
  notify:
    - restart namenode
- name: format namenode
  shell: su -c "hdfs namenode -format" hdfs 
  register: format_namenode
  when: mastername_changed|success
- name: create user
  user: name=pascal home=/home/pascal
- name: start all services
  service: name={{ item }} state=started
  with_items:
    - hadoop-hdfs-namenode
    - hadoop-hdfs-datanode
    - hadoop-yarn-resourcemanager
    - haddo-yarn-nodemanager
- name: wait for hdfs to be ready
  wait_for: port=8020 delay=5 
- name: create hdfs config
  shell: "{{item}}"
  remote_user: hdfs
  when: format_namenode|success
  with_items:
    - hadoop fs -rm -r /tmp 
    - hadoop fs -mkdir -p /tmp/hadoop-yarn/staging 
    - hadoop fs -chmod -R 777 /tmp/hadoop-yarn/staging
    - hadoop fs -mkdir -p /tmp/hadoop-yarn/staging/history/done_intermediate
    - hadoop fs -chown -R mapred:mapred /tmp/hadoop-yarn/staging
    - hadoop fs -mkdir -p /var/log/hadoop-yarn
    - hadoop fs -chown yarn:mapred /var/log/hadoop-yarn
    - hadoop fs -chmod -R 1777 /tmp
    - hadoop fs -mkdir -p /user/root
    - hadoop fs -chown root:root /user/root
    - hadoop fs -mkdir -p /user/pascal
    - hadoop fs -chown pascal:pascal /user/pascal
#- meta: flush_handlers
